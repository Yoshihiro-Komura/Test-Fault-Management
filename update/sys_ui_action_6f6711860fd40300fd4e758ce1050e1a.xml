<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name>Button for 差し戻し</action_name>
        <active>true</active>
        <client>false</client>
        <comments>承認待ち状態から、差し戻し</comments>
        <condition>current.u_status == 14</condition>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_context_menu>false</form_context_menu>
        <form_link>false</form_link>
        <form_style/>
        <hint/>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <name>差し戻し</name>
        <onclick/>
        <order>50</order>
        <script><![CDATA[if(current.u_edit_mode){
	// 新規用の配列変数を用意
	var hisArr = [];
	// 現在のアクセスしているユーザー名を取得
	var ourUser = gs.getUser();
	var userName = ourUser.getDisplayName();
	// 現在の日付を取得
	var valDate = current.u_completion_report_date;
	// 理由の取得
	var valReason = current.u_reason_return;
	// 担当者変更履歴の抽出
	var history = current.u_reversed_history + '';
	if(history != "") {
		hisArr = history.split('</table>');
	}
	// 履歴はあるか？
	if(history.length > 0){
		// 履歴がある
		var num = history.indexOf("</table>");
		hisArr.push(history.substring(0, num));
		hisArr.push('<tr><td>' + valDate + '</td><td>' + userName + '</td><td>' + valReason + '</td></tr>');
		hisArr.push("</table>");
	} else {
		// 履歴がない
		hisArr.push("<table width=\"100%\">");
		hisArr.push("<tr><th width=\"20%\">日付</th><th width=\"30%\">担当者</th><th width=\"50%\">変更理由</th></tr>");
		hisArr.push('<tr><td>' + valDate + '</td><td>' + userName + '</td><td>' + valReason + '</td></tr>');
		hisArr.push('</table>');
	}

	var valHtml = '';
	for(ii = 0; ii < hisArr.length; ii++){
		valHtml += hisArr[ii];
	}

	current.u_reversed_history = valHtml;

	current.u_status = 11;
	current.u_reason_return = "";
}
current.update();]]></script>
        <show_insert>true</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-08-02 00:02:19</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>6f6711860fd40300fd4e758ce1050e1a</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>差し戻し</sys_name>
        <sys_overrides/>
        <sys_package display_value="Test Fault Management" source="x_136731_test_faul">6dd5e3cc0f100300fd4e758ce1050e66</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Test Fault Management">6dd5e3cc0f100300fd4e758ce1050e66</sys_scope>
        <sys_update_name>sys_ui_action_6f6711860fd40300fd4e758ce1050e1a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-08-07 05:50:51</sys_updated_on>
        <table>x_136731_test_faul_management</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
</record_update>
